Arguments: Namespace(algorithm='incremental', debug=True, nofluents=True, problem='pavilion', reset_to_home=False, seq_n=None, write=True)
[36mUsing downward backend.[0m
[35mSymbolic process json parsed from C:\Users\harry\Documents\code_ws\pb_ws\debug_pyplanners\itj\pavilion_process_symbolic.json[0m
[36mSolving for beam ['b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'b10', 'b11', 'b12', 'b13', 'b14', 'b15', 'b16', 'b17', 'b18', 'b19', 'b20', 'b21', 'b22', 'b23', 'b24', 'b26', 'b27', 'b28', 'b29', 'b30', 'b31', 'b25', 'b32', 'b33', 'b34', 'b35', 'b36', 'b37', 'b38', 'b39'][0m
[33mUsing beam sequence ordering: ['b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'b10', 'b11', 'b12', 'b13', 'b14', 'b15', 'b16', 'b17', 'b18', 'b19', 'b20', 'b21', 'b22', 'b23', 'b24', 'b26', 'b27', 'b28', 'b29', 'b30', 'b31', 'b25', 'b32', 'b33', 'b34', 'b35', 'b36', 'b37', 'b38', 'b39'][0m

Initial: [('RobotToolChangerEmpty',), ('AtRack', 'b0'), ('Element', 'b0'), ('GroundContactElement', 'b0'), ('AtRack', 'b1'), ('Element', 'b1'), ('GroundContactElement', 'b1'), ('AtRack', 'b2'), ('Element', 'b2'), ('ClampedElement', 'b2'), ('AtRack', 'b3'), ('Element', 'b3'), ('ClampedElement', 'b3'), ('AtRack', 'b4'), ('Element', 'b4'), ('ClampedElement', 'b4'), ('AtRack', 'b5'), ('Element', 'b5'), ('GroundContactElement', 'b5'), ('AtRack', 'b6'), ('Element', 'b6'), ('ClampedElement', 'b6'), ('AtRack', 'b7'), ('Element', 'b7'), ('GroundContactElement', 'b7'), ('AtRack', 'b8'), ('Element', 'b8'), ('ClampedElement', 'b8'), ('AtRack', 'b9'), ('Element', 'b9'), ('ClampedElement', 'b9'), ('AtRack', 'b10'), ('Element', 'b10'), ('ClampedElement', 'b10'), ('AtRack', 'b11'), ('Element', 'b11'), ('ClampedElement', 'b11'), ('AtRack', 'b12'), ('Element', 'b12'), ('GroundContactElement', 'b12'), ('AtRack', 'b13'), ('Element', 'b13'), ('ClampedElement', 'b13'), ('AtRack', 'b14'), ('Element', 'b14'), ('GroundContactElement', 'b14'), ('AtRack', 'b15'), ('Element', 'b15'), ('ClampedElement', 'b15'), ('AtRack', 'b16'), ('Element', 'b16'), ('ClampedElement', 'b16'), ('AtRack', 'b17'), ('Element', 'b17'), ('ClampedElement', 'b17'), ('AtRack', 'b18'), ('Element', 'b18'), ('ClampedElement', 'b18'), ('AtRack', 'b19'), ('Element', 'b19'), ('GroundContactElement', 'b19'), ('AtRack', 'b20'), ('Element', 'b20'), ('ClampedElement', 'b20'), ('AtRack', 'b21'), ('Element', 'b21'), ('GroundContactElement', 'b21'), ('AtRack', 'b22'), ('Element', 'b22'), ('ClampedElement', 'b22'), ('AtRack', 'b23'), ('Element', 'b23'), ('ClampedElement', 'b23'), ('AtRack', 'b24'), ('Element', 'b24'), ('GroundContactElement', 'b24'), ('AtRack', 'b26'), ('Element', 'b26'), ('ClampedElement', 'b26'), ('AtRack', 'b27'), ('Element', 'b27'), ('ClampedElement', 'b27'), ('AtRack', 'b28'), ('Element', 'b28'), ('GroundContactElement', 'b28'), ('AtRack', 'b29'), ('Element', 'b29'), ('ClampedElement', 'b29'), ('AtRack', 'b30'), ('Element', 'b30'), ('GroundContactElement', 'b30'), ('AtRack', 'b31'), ('Element', 'b31'), ('ClampedElement', 'b31'), ('AtRack', 'b25'), ('Element', 'b25'), ('ClampedElement', 'b25'), ('AtRack', 'b32'), ('Element', 'b32'), ('ClampedElement', 'b32'), ('AtRack', 'b33'), ('Element', 'b33'), ('ClampedElement', 'b33'), ('AtRack', 'b34'), ('Element', 'b34'), ('ClampedElement', 'b34'), ('AtRack', 'b35'), ('Element', 'b35'), ('ClampedElement', 'b35'), ('AtRack', 'b36'), ('Element', 'b36'), ('ClampedElement', 'b36'), ('AtRack', 'b37'), ('Element', 'b37'), ('GroundContactElement', 'b37'), ('AtRack', 'b38'), ('Element', 'b38'), ('ClampedElement', 'b38'), ('AtRack', 'b39'), ('Element', 'b39'), ('ClampedElement', 'b39'), ('Joint', 'b0', 'b2'), ('Joint', 'b0', 'b3'), ('Joint', 'b0', 'b6'), ('Joint', 'b1', 'b2'), ('Joint', 'b1', 'b3'), ('Joint', 'b1', 'b8'), ('Joint', 'b2', 'b4'), ('Joint', 'b3', 'b4'), ('Joint', 'b5', 'b10'), ('Joint', 'b5', 'b13'), ('Joint', 'b5', 'b6'), ('Joint', 'b5', 'b9'), ('Joint', 'b7', 'b10'), ('Joint', 'b7', 'b16'), ('Joint', 'b7', 'b8'), ('Joint', 'b7', 'b9'), ('Joint', 'b9', 'b11'), ('Joint', 'b10', 'b11'), ('Joint', 'b12', 'b13'), ('Joint', 'b12', 'b15'), ('Joint', 'b12', 'b17'), ('Joint', 'b12', 'b20'), ('Joint', 'b14', 'b15'), ('Joint', 'b14', 'b16'), ('Joint', 'b14', 'b17'), ('Joint', 'b15', 'b18'), ('Joint', 'b16', 'b21'), ('Joint', 'b17', 'b18'), ('Joint', 'b19', 'b20'), ('Joint', 'b19', 'b22'), ('Joint', 'b19', 'b29'), ('Joint', 'b21', 'b22'), ('Joint', 'b21', 'b23'), ('Joint', 'b21', 'b25'), ('Joint', 'b22', 'b23'), ('Joint', 'b24', 'b25'), ('Joint', 'b24', 'b26'), ('Joint', 'b24', 'b27'), ('Joint', 'b24', 'b31'), ('Joint', 'b26', 'b27'), ('Joint', 'b26', 'b28'), ('Joint', 'b27', 'b28'), ('Joint', 'b28', 'b29'), ('Joint', 'b28', 'b36'), ('Joint', 'b30', 'b31'), ('Joint', 'b30', 'b38'), ('Joint', 'b30', 'b39'), ('Joint', 'b31', 'b32'), ('Joint', 'b25', 'b32'), ('Joint', 'b32', 'b33'), ('Joint', 'b32', 'b34'), ('Joint', 'b33', 'b34'), ('Joint', 'b33', 'b35'), ('Joint', 'b34', 'b35'), ('Joint', 'b35', 'b36'), ('Joint', 'b36', 'b37'), ('Joint', 'b37', 'b38'), ('Joint', 'b37', 'b39'), ('Joint', 'b38', 'b39'), ('Order', 'b0', 'b1'), ('Order', 'b1', 'b2'), ('Order', 'b2', 'b3'), ('Order', 'b3', 'b4'), ('Order', 'b4', 'b5'), ('Order', 'b5', 'b6'), ('Order', 'b6', 'b7'), ('Order', 'b7', 'b8'), ('Order', 'b8', 'b9'), ('Order', 'b9', 'b10'), ('Order', 'b10', 'b11'), ('Order', 'b11', 'b12'), ('Order', 'b12', 'b13'), ('Order', 'b13', 'b14'), ('Order', 'b14', 'b15'), ('Order', 'b15', 'b16'), ('Order', 'b16', 'b17'), ('Order', 'b17', 'b18'), ('Order', 'b18', 'b19'), ('Order', 'b19', 'b20'), ('Order', 'b20', 'b21'), ('Order', 'b21', 'b22'), ('Order', 'b22', 'b23'), ('Order', 'b23', 'b24'), ('Order', 'b24', 'b26'), ('Order', 'b26', 'b27'), ('Order', 'b27', 'b28'), ('Order', 'b28', 'b29'), ('Order', 'b29', 'b30'), ('Order', 'b30', 'b31'), ('Order', 'b31', 'b25'), ('Order', 'b25', 'b32'), ('Order', 'b32', 'b33'), ('Order', 'b33', 'b34'), ('Order', 'b34', 'b35'), ('Order', 'b35', 'b36'), ('Order', 'b36', 'b37'), ('Order', 'b37', 'b38'), ('Order', 'b38', 'b39'), ('Clamp', 'c1'), ('Tool', 'c1'), ('AtRack', 'c1'), ('ToolNotOccupiedOnJoint', 'c1'), ('Clamp', 'c2'), ('Tool', 'c2'), ('AtRack', 'c2'), ('ToolNotOccupiedOnJoint', 'c2'), ('Clamp', 'c3'), ('Tool', 'c3'), ('AtRack', 'c3'), ('ToolNotOccupiedOnJoint', 'c3'), ('Clamp', 'c4'), ('Tool', 'c4'), ('AtRack', 'c4'), ('ToolNotOccupiedOnJoint', 'c4'), ('JointToolTypeMatch', 'b0', 'b2', 'c3'), ('JointToolTypeMatch', 'b0', 'b2', 'c4'), ('JointToolTypeMatch', 'b0', 'b3', 'c3'), ('JointToolTypeMatch', 'b0', 'b3', 'c4'), ('JointToolTypeMatch', 'b0', 'b6', 'c1'), ('JointToolTypeMatch', 'b0', 'b6', 'c2'), ('JointToolTypeMatch', 'b1', 'b2', 'c3'), ('JointToolTypeMatch', 'b1', 'b2', 'c4'), ('JointToolTypeMatch', 'b1', 'b3', 'c3'), ('JointToolTypeMatch', 'b1', 'b3', 'c4'), ('JointToolTypeMatch', 'b1', 'b8', 'c1'), ('JointToolTypeMatch', 'b1', 'b8', 'c2'), ('JointToolTypeMatch', 'b2', 'b4', 'c1'), ('JointToolTypeMatch', 'b2', 'b4', 'c2'), ('JointToolTypeMatch', 'b3', 'b4', 'c1'), ('JointToolTypeMatch', 'b3', 'b4', 'c2'), ('JointToolTypeMatch', 'b5', 'b10', 'c3'), ('JointToolTypeMatch', 'b5', 'b10', 'c4'), ('JointToolTypeMatch', 'b5', 'b13', 'c1'), ('JointToolTypeMatch', 'b5', 'b13', 'c2'), ('JointToolTypeMatch', 'b5', 'b6', 'c1'), ('JointToolTypeMatch', 'b5', 'b6', 'c2'), ('JointToolTypeMatch', 'b5', 'b9', 'c1'), ('JointToolTypeMatch', 'b5', 'b9', 'c2'), ('JointToolTypeMatch', 'b7', 'b10', 'c3'), ('JointToolTypeMatch', 'b7', 'b10', 'c4'), ('JointToolTypeMatch', 'b7', 'b16', 'c1'), ('JointToolTypeMatch', 'b7', 'b16', 'c2'), ('JointToolTypeMatch', 'b7', 'b8', 'c1'), ('JointToolTypeMatch', 'b7', 'b8', 'c2'), ('JointToolTypeMatch', 'b7', 'b9', 'c1'), ('JointToolTypeMatch', 'b7', 'b9', 'c2'), ('JointToolTypeMatch', 'b9', 'b11', 'c3'), ('JointToolTypeMatch', 'b9', 'b11', 'c4'), ('JointToolTypeMatch', 'b10', 'b11', 'c3'), ('JointToolTypeMatch', 'b10', 'b11', 'c4'), ('JointToolTypeMatch', 'b12', 'b13', 'c1'), ('JointToolTypeMatch', 'b12', 'b13', 'c2'), ('JointToolTypeMatch', 'b12', 'b15', 'c1'), ('JointToolTypeMatch', 'b12', 'b15', 'c2'), ('JointToolTypeMatch', 'b12', 'b17', 'c1'), ('JointToolTypeMatch', 'b12', 'b17', 'c2'), ('JointToolTypeMatch', 'b12', 'b20', 'c3'), ('JointToolTypeMatch', 'b12', 'b20', 'c4'), ('JointToolTypeMatch', 'b14', 'b15', 'c1'), ('JointToolTypeMatch', 'b14', 'b15', 'c2'), ('JointToolTypeMatch', 'b14', 'b16', 'c1'), ('JointToolTypeMatch', 'b14', 'b16', 'c2'), ('JointToolTypeMatch', 'b14', 'b17', 'c1'), ('JointToolTypeMatch', 'b14', 'b17', 'c2'), ('JointToolTypeMatch', 'b15', 'b18', 'c3'), ('JointToolTypeMatch', 'b15', 'b18', 'c4'), ('JointToolTypeMatch', 'b16', 'b21', 'c3'), ('JointToolTypeMatch', 'b16', 'b21', 'c4'), ('JointToolTypeMatch', 'b17', 'b18', 'c3'), ('JointToolTypeMatch', 'b17', 'b18', 'c4'), ('JointToolTypeMatch', 'b19', 'b20', 'c3'), ('JointToolTypeMatch', 'b19', 'b20', 'c4'), ('JointToolTypeMatch', 'b19', 'b22', 'c1'), ('JointToolTypeMatch', 'b19', 'b22', 'c2'), ('JointToolTypeMatch', 'b19', 'b29', 'c1'), ('JointToolTypeMatch', 'b19', 'b29', 'c2'), ('JointToolTypeMatch', 'b21', 'b22', 'c1'), ('JointToolTypeMatch', 'b21', 'b22', 'c2'), ('JointToolTypeMatch', 'b21', 'b23', 'c3'), ('JointToolTypeMatch', 'b21', 'b23', 'c4'), ('JointToolTypeMatch', 'b21', 'b25', 'c1'), ('JointToolTypeMatch', 'b21', 'b25', 'c2'), ('JointToolTypeMatch', 'b22', 'b23', 'c1'), ('JointToolTypeMatch', 'b22', 'b23', 'c2'), ('JointToolTypeMatch', 'b24', 'b25', 'c1'), ('JointToolTypeMatch', 'b24', 'b25', 'c2'), ('JointToolTypeMatch', 'b24', 'b26', 'c1'), ('JointToolTypeMatch', 'b24', 'b26', 'c2'), ('JointToolTypeMatch', 'b24', 'b27', 'c1'), ('JointToolTypeMatch', 'b24', 'b27', 'c2'), ('JointToolTypeMatch', 'b24', 'b31', 'c1'), ('JointToolTypeMatch', 'b24', 'b31', 'c2'), ('JointToolTypeMatch', 'b26', 'b27', 'c3'), ('JointToolTypeMatch', 'b26', 'b27', 'c4'), ('JointToolTypeMatch', 'b26', 'b28', 'c3'), ('JointToolTypeMatch', 'b26', 'b28', 'c4'), ('JointToolTypeMatch', 'b27', 'b28', 'c1'), ('JointToolTypeMatch', 'b27', 'b28', 'c2'), ('JointToolTypeMatch', 'b28', 'b29', 'c1'), ('JointToolTypeMatch', 'b28', 'b29', 'c2'), ('JointToolTypeMatch', 'b28', 'b36', 'c1'), ('JointToolTypeMatch', 'b28', 'b36', 'c2'), ('JointToolTypeMatch', 'b30', 'b31', 'c1'), ('JointToolTypeMatch', 'b30', 'b31', 'c2'), ('JointToolTypeMatch', 'b30', 'b38', 'c3'), ('JointToolTypeMatch', 'b30', 'b38', 'c4'), ('JointToolTypeMatch', 'b30', 'b39', 'c3'), ('JointToolTypeMatch', 'b30', 'b39', 'c4'), ('JointToolTypeMatch', 'b31', 'b32', 'c3'), ('JointToolTypeMatch', 'b31', 'b32', 'c4'), ('JointToolTypeMatch', 'b25', 'b32', 'c3'), ('JointToolTypeMatch', 'b25', 'b32', 'c4'), ('JointToolTypeMatch', 'b32', 'b33', 'c1'), ('JointToolTypeMatch', 'b32', 'b33', 'c2'), ('JointToolTypeMatch', 'b32', 'b34', 'c1'), ('JointToolTypeMatch', 'b32', 'b34', 'c2'), ('JointToolTypeMatch', 'b33', 'b34', 'c1'), ('JointToolTypeMatch', 'b33', 'b34', 'c2'), ('JointToolTypeMatch', 'b33', 'b35', 'c1'), ('JointToolTypeMatch', 'b33', 'b35', 'c2'), ('JointToolTypeMatch', 'b34', 'b35', 'c1'), ('JointToolTypeMatch', 'b34', 'b35', 'c2'), ('JointToolTypeMatch', 'b35', 'b36', 'c1'), ('JointToolTypeMatch', 'b35', 'b36', 'c2'), ('JointToolTypeMatch', 'b36', 'b37', 'c3'), ('JointToolTypeMatch', 'b36', 'b37', 'c4'), ('JointToolTypeMatch', 'b37', 'b38', 'c3'), ('JointToolTypeMatch', 'b37', 'b38', 'c4'), ('JointToolTypeMatch', 'b37', 'b39', 'c3'), ('JointToolTypeMatch', 'b37', 'b39', 'c4'), ('JointToolTypeMatch', 'b38', 'b39', 'c1'), ('JointToolTypeMatch', 'b38', 'b39', 'c2'), ('Gripper', 'g1'), ('Tool', 'g1'), ('AtRack', 'g1'), ('Gripper', 'g2'), ('Tool', 'g2'), ('AtRack', 'g2'), ('GripperToolTypeMatch', 'b0', 'g2'), ('GripperToolTypeMatch', 'b1', 'g2'), ('GripperToolTypeMatch', 'b2', 'g2'), ('GripperToolTypeMatch', 'b3', 'g2'), ('GripperToolTypeMatch', 'b4', 'g2'), ('GripperToolTypeMatch', 'b5', 'g2'), ('GripperToolTypeMatch', 'b6', 'g1'), ('GripperToolTypeMatch', 'b7', 'g2'), ('GripperToolTypeMatch', 'b8', 'g1'), ('GripperToolTypeMatch', 'b9', 'g2'), ('GripperToolTypeMatch', 'b10', 'g2'), ('GripperToolTypeMatch', 'b11', 'g2'), ('GripperToolTypeMatch', 'b12', 'g2'), ('GripperToolTypeMatch', 'b13', 'g1'), ('GripperToolTypeMatch', 'b14', 'g2'), ('GripperToolTypeMatch', 'b15', 'g2'), ('GripperToolTypeMatch', 'b16', 'g2'), ('GripperToolTypeMatch', 'b17', 'g2'), ('GripperToolTypeMatch', 'b18', 'g2'), ('GripperToolTypeMatch', 'b19', 'g2'), ('GripperToolTypeMatch', 'b20', 'g2'), ('GripperToolTypeMatch', 'b21', 'g2'), ('GripperToolTypeMatch', 'b22', 'g2'), ('GripperToolTypeMatch', 'b23', 'g1'), ('GripperToolTypeMatch', 'b24', 'g2'), ('GripperToolTypeMatch', 'b26', 'g2'), ('GripperToolTypeMatch', 'b27', 'g2'), ('GripperToolTypeMatch', 'b28', 'g2'), ('GripperToolTypeMatch', 'b29', 'g2'), ('GripperToolTypeMatch', 'b30', 'g2'), ('GripperToolTypeMatch', 'b31', 'g2'), ('GripperToolTypeMatch', 'b25', 'g2'), ('GripperToolTypeMatch', 'b32', 'g2'), ('GripperToolTypeMatch', 'b33', 'g2'), ('GripperToolTypeMatch', 'b34', 'g2'), ('GripperToolTypeMatch', 'b35', 'g2'), ('GripperToolTypeMatch', 'b36', 'g2'), ('GripperToolTypeMatch', 'b37', 'g2'), ('GripperToolTypeMatch', 'b38', 'g2'), ('GripperToolTypeMatch', 'b39', 'g2')]

Goal: ('and', ('Assembled', 'b0'), ('Assembled', 'b1'), ('Assembled', 'b2'), ('Assembled', 'b3'), ('Assembled', 'b4'), ('Assembled', 'b5'), ('Assembled', 'b6'), ('Assembled', 'b7'), ('Assembled', 'b8'), ('Assembled', 'b9'), ('Assembled', 'b10'), ('Assembled', 'b11'), ('Assembled', 'b12'), ('Assembled', 'b13'), ('Assembled', 'b14'), ('Assembled', 'b15'), ('Assembled', 'b16'), ('Assembled', 'b17'), ('Assembled', 'b18'), ('Assembled', 'b19'), ('Assembled', 'b20'), ('Assembled', 'b21'), ('Assembled', 'b22'), ('Assembled', 'b23'), ('Assembled', 'b24'), ('Assembled', 'b26'), ('Assembled', 'b27'), ('Assembled', 'b28'), ('Assembled', 'b29'), ('Assembled', 'b30'), ('Assembled', 'b31'), ('Assembled', 'b25'), ('Assembled', 'b32'), ('Assembled', 'b33'), ('Assembled', 'b34'), ('Assembled', 'b35'), ('Assembled', 'b36'), ('Assembled', 'b37'), ('Assembled', 'b38'), ('Assembled', 'b39'))

Iteration: 1 | Complexity: 0 | Calls: 0 | Evaluations: 399 | Solved: False | Cost: inf | Search Time: 0.005 | Sample Time: 0.000 | Time: 0.005

Generating Datalog program... [0.000s CPU, 0.004s wall-clock]
Normalizing Datalog program...
Duplicate arguments: Adding equality conditions.
Normalizing Datalog program: [0.000s CPU, 0.006s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 74 rules.
Computing model... [0.109s CPU, 0.100s wall-clock]
10751 relevant atoms
532 auxiliary atoms
11283 final queue length
16948 total queue pushes
Completing instantiation... [0.125s CPU, 0.132s wall-clock]
Infeasible: False
Instantiation time: 0.247s
Instantiated frequencies:
Atoms: {assembled: 46, atrack: 46, attached: 46, clamporscrewdriver: 46, connected: 46, existnoclampatoneassembledjoints: 31, existnoscrewdriveratoneassembledjoints: 31, jointmade: 2116, jointoccupiedbytool: 118, new-axiom@0: 39, robotgripperempty: 1, robottoolchangerempty: 1, toolatjoint: 236, toolnotoccupiedonjoint: 4}
Actions: {pick_beam_with_gripper: 40, pick_clamp_from_structure: 118, pick_tool_from_rack: 6, place_clamp_to_structure: 118, place_tool_at_rack: 10}
Axioms: {clamporscrewdriver: 4, connected: 71, existnoclampatoneassembledjoints: 55, jointmade: 4173, new-axiom@0: 39}

Computing fact groups...
Finding invariants...
20 initial candidates
Finding invariants: [0.000s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
2807 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.016s CPU, 0.017s wall-clock]
Computing fact groups: [0.078s CPU, 0.073s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.005s wall-clock]
Building dictionary for full mutex groups... [0.016s CPU, 0.003s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.004s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.002s wall-clock]
Translator axioms removed by simplifying: 4
Computing negative axioms... [0.016s CPU, 0.002s wall-clock]
Processing axioms: [0.031s CPU, 0.028s wall-clock]
Translating task: [0.078s CPU, 0.075s wall-clock]
Detecting unreachable propositions...
Simplified to trivially false goal! Generating unsolvable task...
Detecting unreachable propositions: [0.031s CPU, 0.036s wall-clock]

--------------------------------------------------

Search command: C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin\downward --internal-plan-file temp/sas_plan --heuristic "h=ff(transform=adapt_costs(cost_type=PLUSONE))" --search "eager_greedy([h],max_time=infinity,bound=infinity)" < temp/output.sas
[t=3.12e-05s, 648 KB] reading input...
[t=0.0001294s, 648 KB] done reading input!
[t=0.0019512s, 928 KB] Simplifying 0 unary operators... done! [0 unary operators]
[t=0.001967s, 928 KB] time to simplify: 2.07e-05s
[t=0.001976s, 928 KB] Initializing additive heuristic...
[t=0.0019809s, 928 KB] Initializing FF heuristic...
[t=0.0020348s, 928 KB] Building successor generator...done!
[t=0.0020514s, 928 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0020568s, 928 KB] time for successor generation creation: 5.9e-06s
[t=0.0020671s, 928 KB] Variables: 1
[t=0.0020723s, 928 KB] FactPairs: 2
[t=0.0020769s, 928 KB] Bytes per state: 4
[t=0.0022219s, 928 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.0022488s, 928 KB] Initial state is a dead end.
[t=0.002254s, 928 KB] Initial heuristic value for ff(transform = adapt_costs(cost_type = plusone)): infinity
[t=0.0022593s, 928 KB] pruning method: none
[t=0.0022643s, 928 KB] Completely explored state space -- no solution!
[t=0.0022702s, 928 KB] Actual search time: 8.9e-06s
[t=0.0022762s, 928 KB] Expanded 0 state(s).
[t=0.0022762s, 928 KB] Reopened 0 state(s).
[t=0.0022762s, 928 KB] Evaluated 1 state(s).
[t=0.0022762s, 928 KB] Evaluations: 1
[t=0.0022762s, 928 KB] Generated 0 state(s).
[t=0.0022762s, 928 KB] Dead ends: 0 state(s).
[t=0.0022762s, 928 KB] Number of registered states: 1
[t=0.0022762s, 928 KB] Int hash set load factor: 1/1 = 1
[t=0.0022762s, 928 KB] Int hash set resizes: 0
[t=0.0022762s, 928 KB] Search time: 5.58e-05s
[t=0.0022762s, 928 KB] Total time: 0.0022762s
Search stopped without finding a solution.
Search runtime: 0.023
Plans: []
Total runtime: 0.024
Iteration: 2 | Complexity: 1 | Calls: 40 | Evaluations: 479 | Solved: False | Cost: inf | Search Time: 0.488 | Sample Time: 0.003 | Time: 0.491

Generating Datalog program... [0.000s CPU, 0.003s wall-clock]
Normalizing Datalog program...
Duplicate arguments: Adding equality conditions.
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 74 rules.
Computing model... [0.453s CPU, 0.451s wall-clock]
42872 relevant atoms
1012 auxiliary atoms
43884 final queue length
80948 total queue pushes
Completing instantiation... [0.453s CPU, 0.446s wall-clock]
Infeasible: False
Instantiation time: 0.912s
Instantiated frequencies:
Atoms: {assembled: 86, atrack: 86, attached: 86, clamporscrewdriver: 86, connected: 86, existnoclampatoneassembledjoints: 31, existnoscrewdriveratoneassembledjoints: 31, jointmade: 7396, jointoccupiedbytool: 118, needretraction: 1, new-axiom@0: 39, robotgripperempty: 1, robottoolchangerempty: 1, toolatjoint: 236, toolnotoccupiedonjoint: 4}
Actions: {beam_placement_with_clamps: 56, beam_placement_without_clamp: 24, pick_beam_with_gripper: 40, pick_clamp_from_structure: 118, pick_tool_from_rack: 6, place_clamp_to_structure: 118, place_tool_at_rack: 10, retract_gripper_from_beam: 172}
Axioms: {clamporscrewdriver: 4, connected: 71, existnoclampatoneassembledjoints: 55, jointmade: 14733, new-axiom@0: 39}

Computing fact groups...
Finding invariants...
20 initial candidates
Finding invariants: [0.016s CPU, 0.008s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.031s CPU, 0.029s wall-clock]
Choosing groups...
8288 uncovered facts
Choosing groups: [0.000s CPU, 0.002s wall-clock]
Building translation key... [0.047s CPU, 0.048s wall-clock]
Computing fact groups: [0.234s CPU, 0.226s wall-clock]
Building STRIPS to SAS dictionary... [0.016s CPU, 0.012s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.009s wall-clock]
Building mutex information...
Building mutex information: [0.016s CPU, 0.012s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.002s wall-clock]
Translator axioms removed by simplifying: 4
Computing negative axioms... [0.000s CPU, 0.003s wall-clock]
Processing axioms: [0.062s CPU, 0.068s wall-clock]
Translating task: [0.172s CPU, 0.175s wall-clock]
Detecting unreachable propositions...
92 operators removed
0 axioms removed
15612 propositions removed
Detecting unreachable propositions: [0.078s CPU, 0.080s wall-clock]
Reordering and filtering variables...
482 of 482 variables necessary.
0 of 0 mutex groups necessary.
452 of 452 operators necessary.
489 of 489 axiom rules necessary.
Reordering and filtering variables: [0.031s CPU, 0.030s wall-clock]
Translator variables: 482
Translator derived variables: 166
Translator facts: 964
Translator goal facts: 40
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 452
Translator axioms: 489
Translator task size: 6898
warning: could not determine peak memory
Translation time: 0.545s

--------------------------------------------------

Search command: C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin\downward --internal-plan-file temp/sas_plan --heuristic "h=ff(transform=adapt_costs(cost_type=PLUSONE))" --search "eager_greedy([h],max_time=infinity,bound=infinity)" < temp/output.sas
[t=3.05e-05s, 656 KB] reading input...
[t=0.0106396s, 1020 KB] done reading input!
[t=0.0131692s, 1472 KB] Simplifying 2239 unary operators... done! [1991 unary operators]
[t=0.0155271s, 1616 KB] time to simplify: 0.0023661s
[t=0.0160225s, 1616 KB] Initializing additive heuristic...
[t=0.0160303s, 1616 KB] Initializing FF heuristic...
[t=0.0161228s, 1616 KB] Building successor generator...done!
[t=0.0167167s, 1616 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0167233s, 1616 KB] time for successor generation creation: 0.0005809s
[t=0.0167362s, 1616 KB] Variables: 482
[t=0.0167418s, 1616 KB] FactPairs: 964
[t=0.0167465s, 1616 KB] Bytes per state: 64
[t=0.0169212s, 1616 KB] Conducting best first search without reopening closed nodes, (real) bound = 2147483647
[t=0.017031s, 1616 KB] WARNING: overflow on h^add! Costs clamped to 100000000
[t=0.0181327s, 1616 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 82
[t=0.0181678s, 1616 KB] g=0, 1 evaluated, 0 expanded
[t=0.0181874s, 1616 KB] Initial heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 82
[t=0.0181966s, 1616 KB] pruning method: none
[t=0.0210438s, 1616 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 80
[t=0.0210568s, 1616 KB] g=11, 43 evaluated, 28 expanded
[t=0.0335396s, 1616 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 78
[t=0.0335561s, 1616 KB] g=27, 250 evaluated, 197 expanded
[t=0.0991776s, 1616 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 77
[t=0.0991956s, 1616 KB] g=32, 1437 evaluated, 1064 expanded
[t=0.0995597s, 1616 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 76
[t=0.0995674s, 1616 KB] g=35, 1443 evaluated, 1068 expanded
[t=0.0996365s, 1616 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 75
[t=0.0996436s, 1616 KB] g=36, 1444 evaluated, 1069 expanded
[t=0.100164s, 1616 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 74
[t=0.100171s, 1616 KB] g=39, 1453 evaluated, 1074 expanded
[t=0.100966s, 1616 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 72
[t=0.100974s, 1616 KB] g=41, 1467 evaluated, 1079 expanded
[t=0.130405s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 71
[t=0.130417s, 1744 KB] g=55, 1971 evaluated, 1480 expanded
[t=0.131388s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 70
[t=0.131396s, 1744 KB] g=57, 1988 evaluated, 1486 expanded
[t=0.14639s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 69
[t=0.146403s, 1744 KB] g=68, 2238 evaluated, 1697 expanded
[t=0.146726s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 68
[t=0.146733s, 1744 KB] g=71, 2244 evaluated, 1701 expanded
[t=0.147888s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 67
[t=0.147896s, 1744 KB] g=73, 2268 evaluated, 1711 expanded
[t=0.149489s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 66
[t=0.149496s, 1744 KB] g=80, 2300 evaluated, 1732 expanded
[t=0.149903s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 65
[t=0.14991s, 1744 KB] g=83, 2308 evaluated, 1736 expanded
[t=0.150634s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 64
[t=0.150641s, 1744 KB] g=85, 2322 evaluated, 1741 expanded
[t=0.151255s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 62
[t=0.151262s, 1744 KB] g=87, 2334 evaluated, 1746 expanded
[t=0.1516s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 60
[t=0.151608s, 1744 KB] g=89, 2340 evaluated, 1750 expanded
[t=0.151894s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 59
[t=0.151902s, 1744 KB] g=92, 2345 evaluated, 1754 expanded
[t=0.151967s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 58
[t=0.151974s, 1744 KB] g=93, 2346 evaluated, 1755 expanded
[t=0.19065s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 57
[t=0.190667s, 1744 KB] g=106, 3043 evaluated, 2301 expanded
[t=0.191557s, 1744 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 56
[t=0.191565s, 1744 KB] g=108, 3061 evaluated, 2307 expanded
[t=0.206762s, 2012 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 55
[t=0.206774s, 2012 KB] g=120, 3344 evaluated, 2530 expanded
[t=0.207123s, 2012 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 54
[t=0.207131s, 2012 KB] g=122, 3351 evaluated, 2534 expanded
[t=0.208203s, 2012 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 53
[t=0.208211s, 2012 KB] g=124, 3375 evaluated, 2544 expanded
[t=0.208512s, 2012 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 52
[t=0.20852s, 2012 KB] g=127, 3381 evaluated, 2548 expanded
[t=0.208582s, 2012 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 51
[t=0.208589s, 2012 KB] g=128, 3382 evaluated, 2549 expanded
[t=0.20888s, 2012 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 50
[t=0.208887s, 2012 KB] g=131, 3388 evaluated, 2553 expanded
[t=0.209365s, 2012 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 48
[t=0.209372s, 2012 KB] g=133, 3398 evaluated, 2558 expanded
[t=0.392741s, 2348 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 47
[t=0.392758s, 2348 KB] g=141, 6978 evaluated, 5289 expanded
[t=0.392819s, 2348 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 46
[t=0.392825s, 2348 KB] g=142, 6979 evaluated, 5290 expanded
[t=0.393303s, 2348 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 44
[t=0.39331s, 2348 KB] g=145, 6989 evaluated, 5295 expanded
[t=0.413292s, 2348 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 42
[t=0.413304s, 2348 KB] g=156, 7373 evaluated, 5616 expanded
[t=0.413557s, 2348 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 41
[t=0.413564s, 2348 KB] g=159, 7378 evaluated, 5620 expanded
[t=0.413622s, 2348 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 40
[t=0.413629s, 2348 KB] g=160, 7379 evaluated, 5621 expanded
[t=0.441592s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 39
[t=0.441608s, 2480 KB] g=173, 7931 evaluated, 6055 expanded
[t=0.44239s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 38
[t=0.442398s, 2480 KB] g=175, 7948 evaluated, 6061 expanded
[t=0.44303s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 37
[t=0.443041s, 2480 KB] g=178, 7959 evaluated, 6068 expanded
[t=0.4431s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 36
[t=0.443107s, 2480 KB] g=179, 7960 evaluated, 6069 expanded
[t=0.443215s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 35
[t=0.443222s, 2480 KB] g=181, 7962 evaluated, 6071 expanded
[t=0.443505s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 34
[t=0.443512s, 2480 KB] g=182, 7968 evaluated, 6074 expanded
[t=0.443657s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 32
[t=0.443664s, 2480 KB] g=183, 7971 evaluated, 6075 expanded
[t=0.455994s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 31
[t=0.456003s, 2480 KB] g=200, 8237 evaluated, 6266 expanded
[t=0.456745s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 30
[t=0.456755s, 2480 KB] g=204, 8254 evaluated, 6274 expanded
[t=0.461835s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 29
[t=0.461846s, 2480 KB] g=209, 8370 evaluated, 6351 expanded
[t=0.461903s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 28
[t=0.461909s, 2480 KB] g=210, 8371 evaluated, 6352 expanded
[t=0.462553s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 27
[t=0.46256s, 2480 KB] g=214, 8386 evaluated, 6358 expanded
[t=0.463892s, 2480 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 26
[t=0.463899s, 2480 KB] g=216, 8418 evaluated, 6372 expanded
[t=0.515425s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 25
[t=0.515441s, 2752 KB] g=230, 9595 evaluated, 7211 expanded
[t=0.516234s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 24
[t=0.516242s, 2752 KB] g=232, 9616 evaluated, 7220 expanded
[t=0.516921s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 23
[t=0.516929s, 2752 KB] g=235, 9633 evaluated, 7232 expanded
[t=0.517206s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 22
[t=0.517213s, 2752 KB] g=238, 9640 evaluated, 7236 expanded
[t=0.51734s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 21
[t=0.517347s, 2752 KB] g=239, 9643 evaluated, 7237 expanded
[t=0.560774s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 20
[t=0.560787s, 2752 KB] g=241, 10711 evaluated, 7977 expanded
[t=0.56231s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 19
[t=0.562317s, 2752 KB] g=249, 10750 evaluated, 8002 expanded
[t=0.562437s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 18
[t=0.562444s, 2752 KB] g=250, 10753 evaluated, 8003 expanded
[t=0.562704s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 17
[t=0.562711s, 2752 KB] g=252, 10760 evaluated, 8007 expanded
[t=0.599513s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 16
[t=0.599525s, 2752 KB] g=259, 11693 evaluated, 8692 expanded
[t=0.599653s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 15
[t=0.599659s, 2752 KB] g=262, 11696 evaluated, 8695 expanded
[t=0.600051s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 14
[t=0.600057s, 2752 KB] g=266, 11707 evaluated, 8700 expanded
[t=0.600671s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 13
[t=0.600678s, 2752 KB] g=268, 11725 evaluated, 8710 expanded
[t=0.600802s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 12
[t=0.600809s, 2752 KB] g=271, 11728 evaluated, 8713 expanded
[t=0.601159s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 11
[t=0.601166s, 2752 KB] g=275, 11738 evaluated, 8718 expanded
[t=0.601425s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 10
[t=0.601434s, 2752 KB] g=276, 11745 evaluated, 8723 expanded
[t=0.601543s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 8
[t=0.601549s, 2752 KB] g=277, 11748 evaluated, 8724 expanded
[t=0.601631s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 7
[t=0.601637s, 2752 KB] g=279, 11750 evaluated, 8726 expanded
[t=0.601683s, 2752 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 6
[t=0.601689s, 2752 KB] g=280, 11751 evaluated, 8727 expanded
[t=0.685906s, 3020 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 5
[t=0.685921s, 3020 KB] g=294, 13924 evaluated, 10464 expanded
[t=0.686212s, 3020 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 4
[t=0.686219s, 3020 KB] g=295, 13933 evaluated, 10469 expanded
[t=0.686319s, 3020 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 2
[t=0.686325s, 3020 KB] g=296, 13936 evaluated, 10470 expanded
[t=0.686391s, 3020 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 1
[t=0.686397s, 3020 KB] g=297, 13938 evaluated, 10471 expanded
[t=0.686431s, 3020 KB] New best heuristic value for ff(transform = adapt_costs(cost_type = plusone)): 0
[t=0.686437s, 3020 KB] g=298, 13939 evaluated, 10472 expanded
[t=0.686444s, 3020 KB] Solution found!
[t=0.686465s, 3020 KB] Actual search time: 0.668265s
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v1 v46 (1)
beam_placement_without_clamp v1 v47 v46 (1)
retract_gripper_from_beam v1 v46 (1)
place_tool_at_rack v46 (1)
pick_tool_from_rack v43 (1)
place_clamp_to_structure v43 v1 v3 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v2 v46 (1)
beam_placement_without_clamp v2 v48 v46 (1)
retract_gripper_from_beam v2 v46 (1)
place_tool_at_rack v46 (1)
pick_tool_from_rack v44 (1)
place_clamp_to_structure v44 v2 v3 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v3 v46 (1)
beam_placement_with_clamps v3 v49 v46 (1)
retract_gripper_from_beam v3 v46 (1)
place_tool_at_rack v46 (1)
pick_tool_from_rack v41 (1)
place_clamp_to_structure v41 v3 v5 (1)
pick_clamp_from_structure v43 v1 v3 (1)
place_clamp_to_structure v43 v1 v4 (1)
pick_clamp_from_structure v44 v2 v3 (1)
place_clamp_to_structure v44 v2 v4 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v4 v46 (1)
beam_placement_with_clamps v4 v50 v46 (1)
retract_gripper_from_beam v4 v46 (1)
place_tool_at_rack v46 (1)
pick_tool_from_rack v42 (1)
place_clamp_to_structure v42 v4 v5 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v5 v46 (1)
beam_placement_with_clamps v5 v51 v46 (1)
retract_gripper_from_beam v5 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v41 v3 v5 (1)
place_clamp_to_structure v41 v1 v7 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v6 v46 (1)
beam_placement_without_clamp v6 v52 v46 (1)
retract_gripper_from_beam v6 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v43 v1 v4 (1)
place_clamp_to_structure v43 v6 v11 (1)
pick_clamp_from_structure v42 v4 v5 (1)
place_clamp_to_structure v42 v6 v7 (1)
pick_tool_from_rack v45 (1)
pick_beam_with_gripper v7 v45 (1)
beam_placement_with_clamps v7 v53 v45 (1)
retract_gripper_from_beam v7 v45 (1)
place_tool_at_rack v45 (1)
pick_clamp_from_structure v41 v1 v7 (1)
place_clamp_to_structure v41 v2 v9 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v8 v46 (1)
beam_placement_without_clamp v8 v54 v46 (1)
retract_gripper_from_beam v8 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v6 v7 (1)
place_clamp_to_structure v42 v8 v9 (1)
pick_clamp_from_structure v44 v2 v4 (1)
place_clamp_to_structure v44 v8 v11 (1)
pick_tool_from_rack v45 (1)
pick_beam_with_gripper v9 v45 (1)
beam_placement_with_clamps v9 v55 v45 (1)
retract_gripper_from_beam v9 v45 (1)
place_tool_at_rack v45 (1)
pick_clamp_from_structure v41 v2 v9 (1)
place_clamp_to_structure v41 v8 v10 (1)
pick_clamp_from_structure v42 v8 v9 (1)
place_clamp_to_structure v42 v6 v10 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v10 v46 (1)
beam_placement_with_clamps v10 v56 v46 (1)
retract_gripper_from_beam v10 v46 (1)
pick_beam_with_gripper v11 v46 (1)
beam_placement_with_clamps v11 v57 v46 (1)
retract_gripper_from_beam v11 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v41 v8 v10 (1)
place_clamp_to_structure v41 v6 v14 (1)
pick_clamp_from_structure v44 v8 v11 (1)
place_clamp_to_structure v44 v10 v12 (1)
pick_clamp_from_structure v43 v6 v11 (1)
place_clamp_to_structure v43 v11 v12 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v12 v46 (1)
beam_placement_with_clamps v12 v58 v46 (1)
retract_gripper_from_beam v12 v46 (1)
pick_beam_with_gripper v13 v46 (1)
beam_placement_without_clamp v13 v59 v46 (1)
retract_gripper_from_beam v13 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v6 v10 (1)
place_clamp_to_structure v42 v13 v14 (1)
pick_tool_from_rack v45 (1)
pick_beam_with_gripper v14 v45 (1)
beam_placement_with_clamps v14 v60 v45 (1)
retract_gripper_from_beam v14 v45 (1)
place_tool_at_rack v45 (1)
pick_clamp_from_structure v42 v13 v14 (1)
place_clamp_to_structure v42 v13 v16 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v15 v46 (1)
beam_placement_without_clamp v15 v61 v46 (1)
retract_gripper_from_beam v15 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v41 v6 v14 (1)
place_clamp_to_structure v41 v15 v16 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v16 v46 (1)
beam_placement_with_clamps v16 v62 v46 (1)
retract_gripper_from_beam v16 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v44 v10 v12 (1)
place_clamp_to_structure v44 v16 v19 (1)
pick_clamp_from_structure v42 v13 v16 (1)
place_clamp_to_structure v42 v15 v17 (1)
pick_clamp_from_structure v41 v15 v16 (1)
place_clamp_to_structure v41 v8 v17 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v17 v46 (1)
beam_placement_with_clamps v17 v63 v46 (1)
retract_gripper_from_beam v17 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v15 v17 (1)
place_clamp_to_structure v42 v13 v18 (1)
pick_clamp_from_structure v41 v8 v17 (1)
place_clamp_to_structure v41 v15 v18 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v18 v46 (1)
beam_placement_with_clamps v18 v64 v46 (1)
retract_gripper_from_beam v18 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v43 v11 v12 (1)
place_clamp_to_structure v43 v18 v19 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v19 v46 (1)
beam_placement_with_clamps v19 v65 v46 (1)
retract_gripper_from_beam v19 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v44 v16 v19 (1)
place_clamp_to_structure v44 v13 v21 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v20 v46 (1)
beam_placement_without_clamp v20 v66 v46 (1)
retract_gripper_from_beam v20 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v13 v18 (1)
place_clamp_to_structure v42 v20 v23 (1)
pick_clamp_from_structure v43 v18 v19 (1)
place_clamp_to_structure v43 v20 v21 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v21 v46 (1)
beam_placement_with_clamps v21 v67 v46 (1)
retract_gripper_from_beam v21 v46 (1)
pick_beam_with_gripper v22 v46 (1)
beam_placement_without_clamp v22 v68 v46 (1)
retract_gripper_from_beam v22 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v41 v15 v18 (1)
place_clamp_to_structure v41 v22 v23 (1)
pick_clamp_from_structure v44 v13 v21 (1)
place_clamp_to_structure v44 v22 v24 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v23 v46 (1)
beam_placement_with_clamps v23 v69 v46 (1)
retract_gripper_from_beam v23 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v20 v23 (1)
place_clamp_to_structure v42 v23 v24 (1)
pick_clamp_from_structure v41 v22 v23 (1)
place_clamp_to_structure v41 v20 v29 (1)
pick_tool_from_rack v45 (1)
pick_beam_with_gripper v24 v45 (1)
beam_placement_with_clamps v24 v70 v45 (1)
retract_gripper_from_beam v24 v45 (1)
place_tool_at_rack v45 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v25 v46 (1)
beam_placement_without_clamp v25 v71 v46 (1)
retract_gripper_from_beam v25 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v23 v24 (1)
place_clamp_to_structure v42 v25 v26 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v26 v46 (1)
beam_placement_with_clamps v26 v72 v46 (1)
retract_gripper_from_beam v26 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v44 v22 v24 (1)
place_clamp_to_structure v44 v26 v27 (1)
pick_clamp_from_structure v42 v25 v26 (1)
place_clamp_to_structure v42 v25 v27 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v27 v46 (1)
beam_placement_with_clamps v27 v73 v46 (1)
retract_gripper_from_beam v27 v46 (1)
pick_beam_with_gripper v28 v46 (1)
beam_placement_without_clamp v28 v74 v46 (1)
retract_gripper_from_beam v28 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v25 v27 (1)
place_clamp_to_structure v42 v28 v29 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v29 v46 (1)
beam_placement_with_clamps v29 v75 v46 (1)
retract_gripper_from_beam v29 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v41 v20 v29 (1)
place_clamp_to_structure v41 v25 v31 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v30 v46 (1)
beam_placement_without_clamp v30 v76 v46 (1)
retract_gripper_from_beam v30 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v28 v29 (1)
place_clamp_to_structure v42 v30 v31 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v31 v46 (1)
beam_placement_with_clamps v31 v77 v46 (1)
retract_gripper_from_beam v31 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v44 v26 v27 (1)
place_clamp_to_structure v44 v31 v33 (1)
pick_clamp_from_structure v41 v25 v31 (1)
place_clamp_to_structure v41 v22 v32 (1)
pick_clamp_from_structure v42 v30 v31 (1)
place_clamp_to_structure v42 v25 v32 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v32 v46 (1)
beam_placement_with_clamps v32 v78 v46 (1)
retract_gripper_from_beam v32 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v43 v20 v21 (1)
place_clamp_to_structure v43 v32 v33 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v33 v46 (1)
beam_placement_with_clamps v33 v79 v46 (1)
retract_gripper_from_beam v33 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v44 v31 v33 (1)
place_clamp_to_structure v44 v30 v39 (1)
pick_clamp_from_structure v41 v22 v32 (1)
place_clamp_to_structure v41 v33 v35 (1)
pick_clamp_from_structure v42 v25 v32 (1)
place_clamp_to_structure v42 v33 v34 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v34 v46 (1)
beam_placement_with_clamps v34 v80 v46 (1)
retract_gripper_from_beam v34 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v42 v33 v34 (1)
place_clamp_to_structure v42 v34 v35 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v35 v46 (1)
beam_placement_with_clamps v35 v81 v46 (1)
retract_gripper_from_beam v35 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v41 v33 v35 (1)
place_clamp_to_structure v41 v34 v36 (1)
pick_clamp_from_structure v42 v34 v35 (1)
place_clamp_to_structure v42 v35 v36 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v36 v46 (1)
beam_placement_with_clamps v36 v82 v46 (1)
retract_gripper_from_beam v36 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v41 v34 v36 (1)
place_clamp_to_structure v41 v28 v37 (1)
pick_clamp_from_structure v42 v35 v36 (1)
place_clamp_to_structure v42 v36 v37 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v37 v46 (1)
beam_placement_with_clamps v37 v83 v46 (1)
retract_gripper_from_beam v37 v46 (1)
pick_beam_with_gripper v38 v46 (1)
beam_placement_without_clamp v38 v84 v46 (1)
retract_gripper_from_beam v38 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v43 v32 v33 (1)
place_clamp_to_structure v43 v38 v39 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v39 v46 (1)
beam_placement_with_clamps v39 v85 v46 (1)
retract_gripper_from_beam v39 v46 (1)
place_tool_at_rack v46 (1)
pick_clamp_from_structure v41 v28 v37 (1)
place_clamp_to_structure v41 v39 v40 (1)
pick_clamp_from_structure v44 v30 v39 (1)
place_clamp_to_structure v44 v30 v40 (1)
pick_clamp_from_structure v43 v38 v39 (1)
place_clamp_to_structure v43 v38 v40 (1)
pick_tool_from_rack v46 (1)
pick_beam_with_gripper v40 v46 (1)
beam_placement_with_clamps v40 v86 v46 (1)
[t=0.686471s, 3020 KB] Plan length: 298 step(s).
[t=0.686471s, 3020 KB] Plan cost: 298
[t=0.686471s, 3020 KB] Expanded 10473 state(s).
[t=0.686471s, 3020 KB] Reopened 0 state(s).
[t=0.686471s, 3020 KB] Evaluated 13939 state(s).
[t=0.686471s, 3020 KB] Evaluations: 13939
[t=0.686471s, 3020 KB] Generated 26588 state(s).
[t=0.686471s, 3020 KB] Dead ends: 2767 state(s).
[t=0.686471s, 3020 KB] Number of registered states: 13939
[t=0.686471s, 3020 KB] Int hash set load factor: 13939/16384 = 0.850769
[t=0.686471s, 3020 KB] Int hash set resizes: 14
[t=0.686471s, 3020 KB] Search time: 0.669551s
[t=0.686471s, 3020 KB] Total time: 0.686471s
Solution found.
Search runtime: 0.725
Plans: ['sas_plan']
Total runtime: 0.776
Summary: {complexity: 1, cost: 298.000, evaluations: 479, iterations: 2, length: 298, run_time: 2.750, sample_time: 0.003, search_time: 2.747, solutions: 1, solved: True, timeout: False}
         4389335 function calls (4371288 primitive calls) in 2.768 seconds

   Ordered by: internal time
   List reduced from 1040 to 25 due to restriction <25>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        2    0.742    0.371    0.742    0.371 {method 'read' of '_io.BufferedReader' objects}
   169300    0.115    0.000    0.134    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\conditions.py:228(__init__)
    96622    0.104    0.000    0.172    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\build_model.py:289(push)
        2    0.086    0.043    0.559    0.279 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\build_model.py:300(compute_model)
        2    0.085    0.043    0.578    0.289 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\instantiate.py:40(instantiate)
    49232    0.081    0.000    0.154    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\conditions.py:272(instantiate)
    59602    0.076    0.000    0.085    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\build_model.py:55(prepare_effect)
   266440    0.069    0.000    0.069    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\conditions.py:240(key)
38900/27805    0.068    0.000    0.299    0.000 {built-in method builtins.sorted}
   133220    0.056    0.000    0.126    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\conditions.py:243(__lt__)
    19970    0.055    0.000    0.208    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\axioms.py:27(instantiate)
   204086    0.051    0.000    0.051    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\conditions.py:232(__eq__)
        2    0.042    0.021    0.049    0.024 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\translate.py:495(<listcomp>)
    21384    0.040    0.000    0.167    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\actions.py:66(instantiate)
     1388    0.036    0.000    0.203    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\build_model.py:139(fire)
    98484    0.032    0.000    0.062    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\axioms.py:69(__lt__)
   196968    0.030    0.000    0.030    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\axioms.py:65(key)
        2    0.029    0.014    0.029    0.014 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\fact_groups.py:103(<listcomp>)
    56112    0.028    0.000    0.162    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\build_model.py:173(fire)
   368152    0.027    0.000    0.028    0.000 {built-in method builtins.isinstance}
    13998    0.027    0.000    0.046    0.000 {built-in method builtins.print}
   229134    0.026    0.000    0.033    0.000 {method 'get' of 'dict' objects}
    55167    0.026    0.000    0.037    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\build_model.py:183(unify)
   281196    0.025    0.000    0.025    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\pddl\conditions.py:16(__hash__)
    38934    0.022    0.000    0.041    0.000 C:\Users\harry\Documents\code_ws\pb_ws\coop_assembly\external\pddlstream\pddlstream\algorithms\../../downward/builds/release/bin/translate\build_model.py:135(_get_bindings)


